name: smoke
run-name: running lint and smoke tests
on: [push]


jobs:
  check-spdx-headers:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - uses: enarx/spdx@master
      with:
        licenses: Apache-2.0

  lint:
    runs-on: ubuntu-latest
    needs: check-spdx-headers
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python3 -m pip install wheel
          python3 -m pip install -e .
      - name: Lint
        run: |
          flake8 . --config=.flake8
          black --check .
      - name: Check docs
        run: ./docs/build.py --build_dir=public --source_dir=docs/public_source --check

  test:
    runs-on: ubuntu-latest
    container: rockylinux:9.1
    if: github.ref != 'refs/heads/main'
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Install Base Dependencies
        run: |
          ./infra/build_base_deps.sh


      - name: Download RISC-V toolchain
        run: |
          mkdir -p $HOME/RV_TOOLCHAIN
          wget -q https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2025.05.30/riscv64-elf-ubuntu-22.04-gcc-nightly-2025.05.30-nightly.tar.xz
          tar -xJf riscv64-elf-ubuntu-22.04-gcc-nightly-2025.05.30-nightly.tar.xz -C $HOME/RV_TOOLCHAIN
          echo "RV_TOOLCHAIN=$HOME/RV_TOOLCHAIN/riscv/bin" >> "$GITHUB_ENV"
          echo "$HOME/RV_TOOLCHAIN/riscv/bin" >> $GITHUB_PATH

      - name: Install Python dependencies
        run: |
          python3 -m pip install wheel
          python3 -m pip install -e .

      - name: Install Whisper
        run: |
          mkdir -p $HOME/whisper

          NO_SINGULARITY=1 ./infra/build_whisper.sh
          echo "WHISPER_PATH=/usr/bin/whisper" >> "$GITHUB_ENV"

      - name: Install Spike
        run: |
          NO_SINGULARITY=1 ./infra/build_spike.sh

      - name: Run tests
        run: python3 -m unittest discover -s tests/ -p "*_test.py"

  deploy-docs:
    runs-on: ubuntu-latest
    needs: lint
    if: github.ref == 'refs/heads/main'  # Only deploy from main branch after passing lint
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Build docs
        run: |
          python3 -m pip install wheel
          python3 -m pip install -e .
          ./docs/build.py --build_dir=public --source_dir=docs/public_source

      - name: Deploy to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      - name: Deploy
        uses: actions/deploy-pages@v4