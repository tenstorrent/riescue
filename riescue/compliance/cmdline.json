{
    "prog": "RiescueC",
    "description" : "Riescue Compliance Test Generator",
    "args" : {
        "json": {
            "name" : ["--json", "-js"],
            "type" : "Path",
            "default" : null,
            "help" : "JSON File specifying the compliance args"
        },

        "output_file" : {
            "name" : ["--output_file", "-o"],
            "type" : "str",
            "help" : "Output Filename. The output is generated as <output_filename>{.s/.dis/.log/.S}"
        },

        "default_config": {
            "name" : ["--default_config", "-dcfg"],
            "type" : "Path",
            "default" : null,
            "help" : "JSON File specifying default configuration"
        },

        "user_config": {
            "name" : ["--user_config", "-ucfg"],
            "type" : "Path",
            "default" : null,
            "help" : "JSON File specifying user-defined configuration"
        },

        "fp_config": {
            "name" : ["--fp_config", "-fcfg"],
            "type" : "str",
            "default" : "compliance/tests/configs/rv_d_f_zfh.json",
            "help" : "JSON File specifying default floating point instruction configuration"
        },

        "dump_instrs": {
            "name" : ["--dump_instrs"],
            "default" : "0",
            "help" : "Switch to dump the instruction fields as JSON"
        },

        "disable_pass": {
            "name": ["--disable_pass"],
            "action": "store_true",
            "help": "Disables the second pass for the compliance run"
        },

        "mode": {
            "name" : ["--mode"],
            "choices" : ["bringup", "compliance", "tp"],
            "default" : "bringup",
            "type" : "str",
            "help" : "Provide mode for the compliance"
        },

        "seed": {
            "name" : ["--seed"],
            "type" : "str",
            "help" : "Provide fixed seed for the compliance"
        },

        "first_pass_iss": {
            "name" : ["--first_pass_iss"],
            "default" : "spike",
            "type" : "str",
            "help" : "Provide Target ISS for the first pass"
        },

        "second_pass_iss": {
            "name" : ["--second_pass_iss"],
            "default" : "whisper",
            "type" : "str",
            "help" : "Provide Target ISS for the second pass"
        },

        "rpt_cnt": {
            "name" : ["--rpt_cnt"],
            "default" : "1",
            "type" : "int",
            "help" : "Each instruction will have rpt_cnt instances in the test"
        },

        "max_instrs_per_file": {
            "name" : ["--max_instrs"],
            "default" : "1000",
            "type" : "int",
            "help" : "Max instrs in the test file during the first pass, including the helper instructions needed to set up the registers for an instruction of interest. This limit does not apply to the second pass instruction count which in some cases will be significantly more. Also not counted are the OS instructions."
        },

        "compare_iss": {
            "name" : ["--compare_iss"],
            "action": "store_true",
            "help" : "Run second pass testcase on both ISS targets (i.e whisper and spike) and compares the logs"
        },

        "repeat_runtime": {
            "name" : ["--repeat_runtime", "-repeat_runtime"],
            "default" : "1",
            "type" : "int",
            "help" : "Send this option to riescued repeat_times. Run each discrete test these many times. Only use this with --disable_pass"
        },

        "run_dir": {
            "name": ["--run_dir", "-rd"],
            "type": "Path",
            "help": "Run directory where the test will be run"
        },

        "output_format": {
            "name": ["--output_format", "-op_fmt"],
            "type": "str",
            "default": "all",
            "help": "Format in which output is generated"
        },

        "load_fp_regs": {
            "name": ["--no_load_fp_regs", "-lfpr"],
            "default" : true,
            "action": "store_false",
            "help" : "Switch to not load fp regs with load instructions rather than fmv instructions. Default is to load fp regs with load instructions."
        },

        "combine_compliance_tests": {
            "name": ["--combine_compliance_tests", "-cct"],
            "type": "int",
            "default" : "0",
            "help" : "When set to 1, compliance tests will be combined into a single discrete test per file."
        },
        "exclude_instrs": {
            "name": ["--exclude_instrs", "-exclude_instrs"],
            "type": "str",
            "default": null,
            "help": "Specify instructions to exclude. e.g. \n\t--exclude_instrs \"add,sub\""
        },
        "instrs": {
            "name": ["--instrs", "-instrs"],
            "default": null,
            "type": "str",
            "help": "Specify instructions to be run. e.g. \n\t--instrs \"add,sub\""
        },

        "groups": {
            "name": ["--groups", "-groups"],
            "default": null,
            "type": "str",
            "help": "Specify groups to be run. e.g. \n\t--groups \"rv64i_load_store,rv32f_single_precision_reg_reg\""
        },

        "_groups" : {
            "Test Environment" : {
                "paging_mode": {
                    "name" : ["--paging_mode", "-pgm"],
                    "type" : "str",
                    "help" : "Whether to run Riescue-D in paging mode",
                    "default" : "any"
                },

                "privilege_mode": {
                    "name" : ["--privilege_mode", "--prm"],
                    "type" : "str",
                    "help" : "Whether to run Riescue-D in privilege mode",
                    "default" : "any"
                },

                "test_env": {
                    "name": ["--test_env", "-test_env"],
                    "default": "",
                    "type": "str",
                    "help": "Specify environment for the test to be forced. e.g. \n\t--test_env bare_metal. Legal values are: bare_metal, virtualized"
                }
            },
            "RiescueD Pass Through" : {
                "description": "Arguments passed through to RiescueD calls",
                "wysiwyg": {
                    "name": ["--wysiwyg", "-wg"],
                    "action": "store_true",
                    "help": "'What You See Is What You Get mode; no OS code is added, only the test code is executed as it is. Intended for environments not monitoring tohost writes"
                },
                "fe_tb": {
                    "name": ["--fe_tb", "-fe_tb"],
                    "action": "store_true",
                    "help": "Special considerations for FE testbench. They really can't know taken vs not-taken branches. So, jump to passed|failed is same for them. So, making passed=failed label"
                },
                "cpuconfig" : {
                    "name": ["--cpuconfig" ],
                    "type": "str",
                    "help": "Path to cpu feature configuration to pass to riescued"
                },
                "rd_args" : {
                    "name": ["--rd_args"],
                    "action": "append",
                    "type": "str",
                    "help": "Direclty pass args to RiescueD calls. e.g. \n\t--rd_args=iss_timeout=15"
                },
                "big_endian": {
                    "name" : ["--big_endian", "-big_e"],
                    "action": "store_true",
                    "help": "Mode for enabling big-endian for cross-compilers and ISS"
                },
                "counters": {
                    "name" : ["--counters", "-c"],
                    "action": "store_true",
                    "help": "Mode for enabling counters for cross-compilers and ISS"
                },
                "single_assembly_file": {
                    "name": ["--single_assembly_file", "-saf"],
                    "action": "store_true",
                    "help": "Indicates that all assembly is written to a single file. Ignoring this option means writing to a handful of .inc files"
                },
                "force_alignment" : {
                    "name": ["--force_alignment"],
                    "action": "store_true",
                    "help": "Forces all data and code to be byte-aligned; Passes argument through to RiescueD"
                },
                "tohost_nonzero_terminate": {
                    "name": ["--tohost_nonzero_terminate", "-tnt"],
                    "action": "store_true",
                    "help": "Spike option to be forwarded. Ends simulation immediately when tohost becomes nonzero."
                },
                "more_os_pages": {
                    "name": ["--more_os_pages", "-mop"],
                    "action": "store_true",
                    "help": "Require for more os pages in Riescue-D"
                }
            },
            "Features" : {
                "description":"Feature/Extension bringup arguments",
                "rv_zfbfmin_experimental": {
                    "name" : ["--rv_zfbfmin_experimental", "-rze"],
                    "action": "store_true",
                    "help": "Experimental mode for to enable rv_zfbfmin, adds options to riescue-d call"
                },
                "rv_zvbb_experimental": {
                    "name" : ["--rv_zvbb_experimental", "-rvz"],
                    "action": "store_true",
                    "help": "Experimental mode for to enable rv_zvbb, adds options to riescue-d call"
                },
                "rv_zvfbfmin_experimental": {
                    "name" : ["--rv_zvfbfmin_experimental", "-rvf"],
                    "action": "store_true",
                    "help": "Experimental mode for to enable rv_zvfbfmin, adds options to riescue-d call"
                },
                "rv_zvfbfwma_experimental": {
                    "name" : ["--rv_zvfbfwma_experimental", "-rvw"],
                    "action": "store_true",
                    "help": "Experimental mode for to enable rv_zvfbfwma, adds options to riescue-d call"
                },
                "rv_zvbc_experimental": {
                    "name" : ["--rv_zvbc_experimental", "-rvb"],
                    "action": "store_true",
                    "help": "Experimental mode for to enable rv_zvbc, adds options to riescue-d call"
                },
                "rv_zvkg_experimental": {
                    "name" : ["--rv_zvkg_experimental", "-rvk"],
                    "action": "store_true",
                    "help": "Experimental mode for to enable rv_zvkg, adds options to riescue-d call"
                },
                "rv_zvknhb_experimental": {
                    "name" : ["--rv_zvknhb_experimental", "-rvn"],
                    "action": "store_true",
                    "help": "Experimental mode for to enable rv_zvknhb, adds options to riescue-d call"
                },
                "vector_bringup": {
                    "name" : ["--vector_bringup", "-vb"],
                    "action": "store_true",
                    "help": "Mode for generating special constraints for vector bringup"
                },
                "experimental_compiler": {
                    "name": ["--experimental_compiler"],
                    "type": "str",
                    "help": "Path to experimental compiler to pass to RiescueD for *_experimental features. Defaults to EXPERIMENTAL_COMPILER environment variable."
                },
                "experimental_objdump": {
                    "name": ["--experimental_objdump"],
                    "type": "str",
                    "help": "Path to experimental objdump to pass to RiescueD for *_experimental features. Defaults to EXPERIMENTAL_OBJDUMP environment variable."
                }
            },
            "Multiprocessor" : {
                "description" : "Arguments for multiprocessor tests",
                "num_cpus": {
                    "name" : ["--num_cpus", "-nc"],
                    "type" : "int",
                    "help" : "Number of harts to run in parallel",
                    "default" : "1"
                },
                "mp_mode": {
                    "name" : ["--mp_mode", "-mpm"],
                    "type" : "str",
                    "help" : "If num_cpus > 1, this option specifies the mode of parallelism. Either simultaneous or parallel",
                    "default" : "parallel"
                },
                "parallel_scheduling_mode" : {
                    "name": ["--parallel_scheduling_mode" ],
                    "default": "",
                    "type": "str",
                    "help": "Overrides parallel scheduling mode provided in cpuconfig file or overridden in test file. Legal values are: 'round_robin', 'exhaustive'"
                }
            },
            "fpgen" : {
                "description": "fpgen options",
                "fpgen_on": {
                    "name" : ["--fpgen_on"],
                    "action": "store_true",
                    "help": "Turn on FPgen, randomly generate floating point numbers using fpgen database. Setting environment variable FPGEN_ENABLED also sets this to true"
                },
                "fast_fpgen": {
                    "name" : ["--fast_fpgen", "-ffp"],
                    "action": "store_true",
                    "help": "Fpgen returns entries in order (doesn't count the number of qualified entries)"
                }
            },
            "gold" : {
                "description": "Deprecated ???",
                "gold_standard_filepath": {
                    "name": ["--gold_standard_filepath"],
                    "type": "str",
                    "help": "Path to gold standard file. Signals that test output should be diffed against this file"
                },
                "replace_gold_standard": {
                    "name": ["--replace_gold_standard"],
                    "action": "store_true",
                    "help": "Convenience option to replace gold standard with test output"
                },
                "riescue_d_gold_test": {
                    "name": ["--riescue_d_gold_test"],
                    "action": "store_true",
                    "help": "Run the test with Riescue-D gold standard"
                },
                "repo_gold_file_used": {
                    "name": ["--repo_gold_file_used"],
                    "action": "store_true",
                    "help": "Indicates that the gold standard file is in the repo"
                }
            }
        }
    }
}